<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Andreas De Rosi - Personal Site</title>
        <link>https://www.andreasderosi.com/</link>
        <description>This is my cool site</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>andreas@derosi.com (Andreas De Rosi)</managingEditor>
            <webMaster>andreas@derosi.com (Andreas De Rosi)</webMaster><lastBuildDate>Thu, 30 Mar 2023 22:49:10 &#43;0530</lastBuildDate>
            <atom:link href="https://www.andreasderosi.com/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Chrome Hack to Save Chat GPT converstion as Markdown</title>
    <link>https://www.andreasderosi.com/posts/chat-gpt-to-markdown/</link>
    <pubDate>Thu, 30 Mar 2023 22:49:10 &#43;0530</pubDate>
    <author>Andreas De Rosi</author>
    <guid>https://www.andreasderosi.com/posts/chat-gpt-to-markdown/</guid>
    <description><![CDATA[I was having a conversation with Chat GPT and wanted to save it as a markdown file. I found a way to do it using Chrome DevTools. Here is the script I used to save the conversation as a markdown file.
Chrome Script function h(html) { return html .replace(/&lt;p&gt;/g, &#39;\n\n&#39;) .replace(/&lt;\/p&gt;/g, &#39;&#39;) .replace(/&lt;b&gt;/g, &#39;**&#39;) .replace(/&lt;\/b&gt;/g, &#39;**&#39;) .replace(/&lt;i&gt;/g, &#39;_&#39;) .replace(/&lt;\/i&gt;/g, &#39;_&#39;) .replace(/&lt;code[^&gt;]*&gt;/g, (match) =&gt; { const lm = match.match(/class=&#34;[^&#34;]*language-([^&#34;]*)&#34;/); return lm ?]]></description>
</item>
<item>
    <title>Writing my first test post with the Netlify CMS</title>
    <link>https://www.andreasderosi.com/posts/netlify-cms-hugo-test/</link>
    <pubDate>Thu, 30 Mar 2023 13:57:50 &#43;0000</pubDate>
    <author>Andreas De Rosi</author>
    <guid>https://www.andreasderosi.com/posts/netlify-cms-hugo-test/</guid>
    <description><![CDATA[A Brief Overview of Hugo CMS: My Personal Experience.]]></description>
</item>
<item>
    <title>Git and Hugo Commands Cheat Sheet</title>
    <link>https://www.andreasderosi.com/posts/hugo-cheat-sheet/</link>
    <pubDate>Thu, 30 Mar 2023 09:39:10 &#43;0530</pubDate>
    <author>Andrea De Rosi</author>
    <guid>https://www.andreasderosi.com/posts/hugo-cheat-sheet/</guid>
    <description><![CDATA[Git Commands Cheat Sheet Note to my root: cd /path/to-folder/ Start Server: hugo server Stop Huger Server: Control + C git status git add . git commit -m &ldquo;Your commit message here&rdquo; &ndash; Commit the changes with a descriptive message: git push &ndash; Push the changes to GitHub After executing these commands, your Hugo site changes should be successfully committed and pushed to GitHub.
Git Commands Help (git help -a) These are common Git commands used in various situations:]]></description>
</item>
</channel>
</rss>
